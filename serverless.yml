custom: 
  service: ${file(env.yml):service}
  provider: ${file(env.yml):provider}
  customDomain: 
    domainName: ${file(env.yml):customDomain.domainName}
    certificateName: ${file(env.yml):customDomain.certificateName}
    basePath: ${file(env.yml):customDomain.basePath}
    stage: ${opt:stage, 'dev'}
    createRoute53Record: ${file(env.yml):customDomain.createRoute53Record}

service: ${self:custom.service}

frameworkVersion: ">=1.23.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  region: ap-southeast-1
  memorySize: 128
  profile: ${self:custom.provider.awsProfile} # aws named profile
  stage: ${opt:stage, 'dev'} # `sls deploy --stage production` if --stage is provided, else use dev
  stackTags: # Optional CF stack tags
    name: ${self:custom.provider.awsTagName}

functions:
  renderHomePage:
    handler: html/handler.render
    tags:
      name: ${self:custom.provider.awsTagName}
    events:
      - http:
          path: '/'
          method: get
          cors: true
  renderHtml:
    handler: html/handler.render
    tags:
      name: ${self:custom.provider.awsTagName}
    events:
      - http:
          path: '{proxy+}'
          method: get
          cors: true

plugins:
  - serverless-offline
  - serverless-domain-manager